var documenterSearchIndex = {"docs":
[{"location":"#SpectralKit-1","page":"SpectralKit","title":"SpectralKit","text":"","category":"section"},{"location":"#","page":"SpectralKit","title":"SpectralKit","text":"This is a very simple package for building blocks of spectral methods. Its intended audience is users who are familiar with the theory and practice of these methods, and prefer to assemble their code from modular building blocks.","category":"page"},{"location":"#","page":"SpectralKit","title":"SpectralKit","text":"The following provides an overview of the interface for univariate function families on various domains:","category":"page"},{"location":"#","page":"SpectralKit","title":"SpectralKit","text":"julia> using SpectralKit\n\njulia> F = ChebyshevInterval(0, 2.0)  # Chebyshev polynomial family on [0,2] — see others below\nChebyshevInterval(0.0, 2.0)\n\njulia> is_function_family(F)          # tells us that we support the interface below\ntrue\n\njulia> domain_extrema(F)              # endpoints\n(0.0, 2.0)\n\njulia> roots(F, 5)                    # Gauss-Chebyshev grid\n5-element Array{Float64,1}:\n 0.04894348370484636\n 0.412214747707527\n 1.0\n 1.5877852522924731\n 1.9510565162951536\n\njulia> augmented_extrema(F, 5)        # Gauss-Lobatto grid\n5-element Array{Float64,1}:\n 0.0\n 0.2928932188134524\n 1.0\n 1.7071067811865475\n 2.0\n\njulia> basis_function(F, 3, 0.41, Order(0)) # value of the 3rd (starting at 1!) polynomial at 0.41\n-0.3037999999999994\n\njulia> basis_function(F, 3, 0.41, OrdersTo(1)) # value and the derivative\n2-element StaticArrays.SArray{Tuple{2},Float64,1,2} with indices SOneTo(2):\n -0.3037999999999994\n -2.3600000000000008","category":"page"},{"location":"#Abstract-interface-for-function-families-1","page":"SpectralKit","title":"Abstract interface for function families","text":"","category":"section"},{"location":"#","page":"SpectralKit","title":"SpectralKit","text":"Order\nOrdersTo\nis_function_family\ndomain_extrema\nbasis_function\nlinear_combination\nroots\naugmented_extrema","category":"page"},{"location":"#SpectralKit.Order","page":"SpectralKit","title":"SpectralKit.Order","text":"Order(D)\n\n\n(Evaluate) derivative D, ≥ 0.\n\n\n\n\n\n","category":"type"},{"location":"#SpectralKit.OrdersTo","page":"SpectralKit","title":"SpectralKit.OrdersTo","text":"OrdersTo(D)\n\n\n(Evaluate) derivatives 0, …, D.\n\n\n\n\n\n","category":"type"},{"location":"#SpectralKit.is_function_family","page":"SpectralKit","title":"SpectralKit.is_function_family","text":"is_function_family(F)\n\nis_function_family(f::F)\n\nTest if the argument is a function family, supporting the following interface:\n\ndomain_extrema for querying the domain,\nbasis_function for function evaluation,\nroots and augmented_extrema to obtain collocation points.\n\nCan be used on both types (preferred) and values (for convenience).\n\n\n\n\n\n","category":"function"},{"location":"#SpectralKit.domain_extrema","page":"SpectralKit","title":"SpectralKit.domain_extrema","text":"domain_extrema(family)\n\nReturn the extrema of the domain of the given family as a tuple.\n\nType can be arbitrary, but guaranteed to be the same for both endpoints, and type stable.\n\n\n\n\n\n","category":"function"},{"location":"#SpectralKit.basis_function","page":"SpectralKit","title":"SpectralKit.basis_function","text":"basis_function(family, k, x, order)\n\nEvaluate the kth (starting from 1) function in family at x.\n\norder determines the derivatives:\n\nOrder(d) returns the dth derivative as a scalar, starting from 0 (for the function value)\nOrdersTo(d) returns the derivatives up to d, starting from the function value, as an SVector.\n\nThe implementation is intended to be type stable.\n\nnote: Note\nConsequences are undefined for evaluating outside the domain.\n\nNote about indexing\n\nMost texts index polynomial families with n = 0, 1, …. Following the Julia array indexing convention, this package uses k = 1, 2, …. Some code may use n = k - 1 internally for easier comparison with well-known formulas.\n\n\n\n\n\n","category":"function"},{"location":"#SpectralKit.linear_combination","page":"SpectralKit","title":"SpectralKit.linear_combination","text":"linear_combination(family, θ, x, order)\n\n\nEvaluate the linear combination of  θₖfₖ(x) of functiona family f₁  at x, for the given order.\n\nThe dimension is implicitly taken from θ.\n\n\n\n\n\n","category":"function"},{"location":"#SpectralKit.roots","page":"SpectralKit","title":"SpectralKit.roots","text":"roots([T], family, N)\n\nReturn the roots of the K = N + 1th function in family, as a vector of N numbers with element type T (default Float64).\n\nIn the context of collocation, this is also known as the “Gauss-Chebyshev” grid.\n\nOrder is monotone, but not guaranteed to be increasing.\n\n\n\n\n\n","category":"function"},{"location":"#SpectralKit.augmented_extrema","page":"SpectralKit","title":"SpectralKit.augmented_extrema","text":"augmented_extrema([T], family, N)\n\nReturn the augmented extrema (extrema + boundary values) of the Nth function in family, as a vector of N numbers with element type T (default Float64).\n\nIn the context of collocation, this is also known as the “Gauss-Lobatto” grid.\n\nOrder is monotone, but not guaranteed to be increasing.\n\n\n\n\n\n","category":"function"},{"location":"#Specific-function-families-1","page":"SpectralKit","title":"Specific function families","text":"","category":"section"},{"location":"#","page":"SpectralKit","title":"SpectralKit","text":"Chebyshev\nChebyshevSemiInf\nChebyshevInf\nChebyshevInterval","category":"page"},{"location":"#SpectralKit.Chebyshev","page":"SpectralKit","title":"SpectralKit.Chebyshev","text":"struct Chebyshev <: SpectralKit.FunctionFamily\n\nChebyhev polynomials of the first kind, defined on [-1,1].\n\n\n\n\n\n","category":"type"},{"location":"#SpectralKit.ChebyshevSemiInf","page":"SpectralKit","title":"SpectralKit.ChebyshevSemiInf","text":"struct ChebyshevSemiInf{T<:Real} <: SpectralKit.TransformedChebyshev\n\nChebyshev polynomials transformed to the domain [A, Inf) (when L > 0) or (-Inf,A] (when L < 0) using y = A + L  (1 + x)  (1 - x).\n\n\n\n\n\n","category":"type"},{"location":"#SpectralKit.ChebyshevInf","page":"SpectralKit","title":"SpectralKit.ChebyshevInf","text":"struct ChebyshevInf{T<:Real} <: SpectralKit.TransformedChebyshev\n\nChebyshev polynomials transformed to the domain (-Inf, Inf). (when L < 0) using y = A + L  x  (L^2 + x^2).\n\n\n\n\n\n","category":"type"},{"location":"#SpectralKit.ChebyshevInterval","page":"SpectralKit","title":"SpectralKit.ChebyshevInterval","text":"struct ChebyshevInterval{T<:Real} <: SpectralKit.TransformedChebyshev\n\nChebyshev polynomials transformed to the domain (a, b). using y = x  s + m.\n\nm and s are calculated and checked by the constructor; a < b is enforced.\n\n\n\n\n\n","category":"type"}]
}
